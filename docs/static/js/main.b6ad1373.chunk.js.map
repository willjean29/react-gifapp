{"version":3,"sources":["components/GifSearch.js","components/GifItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["GifSearch","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","length","categories","type","name","value","onChange","target","GifItem","img","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","setTimeout","then","useFetchGifs","key","GifApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAmCeA,EAjCG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAmBrC,OACE,0BACEC,SAdiB,SAACC,GACpBA,EAAMC,iBACHJ,EAAWK,OAAS,IACrBP,GAAc,SAAAQ,GAAU,OACtBN,GADsB,mBAEnBM,OAELL,EAAc,OASd,2BACEM,KAAK,OACLC,KAAK,SACLC,MAAOT,EACPU,SAxBoB,SAACP,GACzBF,EAAcE,EAAMQ,OAAOF,YCMhBG,EAVC,SAAC,GAAW,IAAVC,EAAS,EAATA,IACTC,EAAaD,EAAbC,MAAMC,EAAOF,EAAPE,IACb,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,0FAC0EO,UAAUF,GADpF,sBAEFG,MAAMR,GAFJ,cAEfS,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KACDC,EAAOD,EAAKE,KAAI,SAAAf,GAAQ,IAAD,EAC3B,MAAO,CACLgB,GAAIhB,EAAIgB,GACRf,MAAOD,EAAIC,MACXC,IAAG,UAAEF,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBhB,QARjB,kBAYdY,GAZc,4CAAH,sDCuBLK,EApBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAJ,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OATAC,qBAAU,WACTC,YAAW,WACVlB,EAAQC,GACPkB,MAAK,SAAAR,GAAM,OAAIK,EAAS,CACvBT,KAAMI,EACNG,SAAS,SAET,QACD,CAACb,IACGc,EDbiBK,CAAanB,GAA9BM,EADuB,EACvBA,KAAMO,EADiB,EACjBA,QAEb,OACE,kBAAC,WAAD,KACE,4BAAKb,GACJa,GAAW,yCACZ,yBAAKjB,UAAU,aACZU,EAAKE,KAAI,SAAAf,GAAG,OACX,kBAAC,EAAD,CACE2B,IAAK3B,EAAIgB,GACThB,IAAKA,UEQF4B,EAnBA,WAAO,IAAD,EACiB1C,mBAAS,CAAC,cAD3B,mBACZO,EADY,KACAR,EADA,KAGnB,OACE,kBAAC,WAAD,KACE,uCACA,kBAAC,EAAD,CAAWA,cAAeA,IAC1B,6BACCQ,EAAWsB,KAAI,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACEoB,IAAKpB,EACLA,SAAUA,SCRpBsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b6ad1373.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst GifSearch = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(inputValue.length > 2){\r\n      setCategories(categories => ([\r\n        inputValue,\r\n        ...categories\r\n      ]));\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (  \r\n    <form\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input \r\n        type=\"text\"\r\n        name=\"search\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default GifSearch;","import React from 'react';\r\n\r\nconst GifItem = ({img}) => {\r\n  const {title,url} = img;\r\n  return (  \r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default GifItem;","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=vIQotPJwWileg8BJuW50SAfRcAqIylPt&q=${encodeURI(category)}&limit=10`;\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}","import React, {Fragment} from 'react'\r\nimport GifItem from './GifItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\nconst GifGrid = ({category}) => {\r\n  const {data, loading} = useFetchGifs(category);\r\n\r\n  return (  \r\n    <Fragment>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Laoding...</p> }\r\n      <div className=\"card-grid\">\r\n        {data.map(img => (\r\n          <GifItem\r\n            key={img.id}\r\n            img={img}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n \r\nexport default GifGrid;","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n   setTimeout(() => {\r\n    getGifs(category)\r\n    .then(images => setState({\r\n      data: images,\r\n      loading: false\r\n    }))\r\n   }, 1500);\r\n  }, [category]);\r\n  return state;\r\n}\r\n \r\n\r\n","import React, {Fragment, useState} from 'react';\r\nimport GifSearch from './components/GifSearch';\r\nimport GifGrid from './components/GifGrid';\r\nconst GifApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (  \r\n    <Fragment>\r\n      <h1>Gif App</h1>\r\n      <GifSearch setCategories={setCategories}/>\r\n      <hr/>\r\n      {categories.map(category => (\r\n        <GifGrid \r\n          key={category}\r\n          category={category}\r\n        />\r\n      ))}\r\n    \r\n    </Fragment>\r\n  );\r\n}\r\n \r\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}